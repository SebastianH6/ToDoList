@if (IsVisible)
{
    <div class="modal" style="display:block;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@((Todo?.Id == 0) ? "Create Todo Item" : "Edit Todo Item")</h5>
                    <button type="button" class="btn-close" @onclick="Close"></button>
                </div>
                <div class="modal-body">

                    <input @bind="todoEdit.Title" class="form-control mb-3" placeholder="title"/>
                    <textarea @bind="todoEdit.Description" class="form-control mb-3" rows="4" placeholder="description..."/>
                    <label for="date">Due Date:</label>
                    <input class="form-control mb-3" id="date" name="date" placeholder="MM/DD/YYYY" type="date" min="@DateTime.Now" @bind="todoEdit.DueDate"/>
                    @* <InputDate TValue="DateOnly" @bind-Value="todoEdit.DueDate" placeholder="MM/DD/YYYY"/> *@
                    <select class="form-select" @bind="todoEdit.Priority">
                        <option value="">Set Priority...</option>
                        <option value="0">Low</option>
                        <option value="1">Medium</option>
                        <option value="2">High</option>
                        <option value="3">Urgent</option>
                    </select>

                </div>

                <div class="modal-footer">
                    @if(Todo?.Id == 0)
                    {
                        <button type="button" class="btn btn-secondary" @onclick="Close">Close</button>
                        <button type="button" class="btn btn-primary" @onclick="Save">Create</button>

                        //<button type="button" class="btn btn-secondary" @onclick="Close">Close</button>
                        //<button type="submit" class="btn btn-primary">Create</button>
                    }
                    else
                    {
                        <button type="button" class="btn btn-secondary" @onclick="Close">Close</button>
                        <button type="button" class="btn btn-primary" @onclick="Save">Save changes</button>

                        //<button type="button" class="btn btn-secondary" @onclick="Close">Close</button>
                        //<button type="submit" class="btn btn-primary" @onclick="Save">Save changes</button>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="modal-backdrop" style="background-color: rgba(0,0,0,0.5);"></div>
}

@code {
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public EventCallback<bool> OnClose { get; set; }
    [Parameter] public TodoItem? Todo { get; set; }
    private TodoItem? todoEdit;
    [Parameter] public EventCallback<TodoItem> OnSave { get; set; }

    protected override void OnParametersSet()
    {
        if(Todo != null)
        {
            todoEdit = new TodoItem
            {
                Id = Todo.Id,
                UserId = Todo.UserId,
                Title = Todo.Title,
                Description = Todo.Description,
                DueDate = Todo.DueDate,
                CreationDate = Todo.CreationDate,
                Priority = Todo.Priority,
                IsDone = Todo.IsDone
            };
        }
    }

    private async Task Save()
    {
        if (todoEdit != null && Todo != null)
        {
            // Update the original TodoItem with the changes
            Todo.Title = todoEdit.Title;
            Todo.Description = todoEdit.Description;
            Todo.DueDate = todoEdit.DueDate;
            Todo.Priority = todoEdit.Priority;
            Todo.IsDone = todoEdit.IsDone;

            await OnSave.InvokeAsync(Todo);
        }
        await Close();
    }

    private async Task Close()
    {
        IsVisible = false;
        await OnClose.InvokeAsync(IsVisible);
    }
}